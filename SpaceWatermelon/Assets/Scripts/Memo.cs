using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Memo
{
    // 행성 초기 위치 생성 후 impulse 등으로 발사
    // 중간 위치에 중력 생성
    // 같은 행성끼리 접촉하면 둘의 중간위치 계산 후 위치에 다음행성 생성
    // 행성마다 굳이 다음 행성들을 모두 가지고있을 이유는 없다
    // pluto 한번까진 moon으로 합쳐지지만 한번 한 뒤에 다시 합쳐지지 않는다
    // 프리팹은 게임오브젝트의 참조를 할 수 없으니까 코드로 넣어줘야함
    // 코루틴으로 일정시간 충돌이 없었을시 삭제도 해야함
    // 충돌을 유지하는 도중에도 collisionEnter가 실행되는건 아닌가 최적화에 문제가 있을거같은데 싶었지만 아니라고한다
    // OnCollisionStay2D 가 따로 있었다
    // n초마다 충전되어 발사되는 형식도 구현해야한다.



    /*  시행착오
     * 화면의 오른쪽으로 발사하려고 right로 했지만 꼭지점의 오른쪽으로 발사됨
     * up으로 바꾸니 해결됨
     * 삭제와 생성이 자주 반복되니 오브젝트 풀을 구현하면 좋겠지만
     * 일단 구현을 어느정도 한 다음 생각하자
     * phase 가 0인 pluto 끼리 부딪히면 phase가 2인 mars가 양산됨
     * 물리판정은 tag 보다 layer를 쓰는게 맞다고 해서 layer로 고쳐준 뒤 
     * 잘못 적용된 phase 를 새로 적용함
     * 충돌을 했는지 판단하는 여부 bool 변수를 넣고 ontrigger엔 아무작업을 하지 않는다를 넣었다.
     * 무한생성이 되었던 이유는 서로 같은 코드를 사용하고 있고 서로 같은 행성이 충돌시 다음행성을 만들게 되어
     * 하나만 생겨야하는 다음 행성이 두개가 생기고 그 두개가 또 다음 행성 두개를 만들고가 반복되어서였다
     * hasCollided라는 bool 변수를 넣어 한번 충돌이 발생한 이후 그 이후의 충돌에 대해 무시하게 했다
     * 한쪽의 onCollisiionEnter가 먼저 실행되게 되어 다른쪽 행성의 경우 hascollided로 인해 이후작업이 실행되지 않게 막음
     * 중력의 중심으로 갈수록 큰 힘을 받게 해 궤도를 돌 수 있게 하려함
     * 중력의 중심과 충돌하지 않았다면 중력의 방향과 수직으로 힘을 주어 궤도를 돌게함
     * 중력의 중심과 가까워질수록 궤도를 유지하려는 힘이 강해지도록 함
     * 중력방향으로 급격하게 당겨지는 현상을 줄였다.
     * 
     */
}
